PREFIX bdo: <http://purl.bdrc.io/ontology/core/>
PREFIX bdr: <http://purl.bdrc.io/resource/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX gist: <https://w3id.org/semanticarts/ns/ontology/gist/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX told: <https://w3id.org/treasuryoflives/ns/data/tol/>
PREFIX tolo: <https://w3id.org/treasuryoflives/ns/ontology/tol/>
PREFIX tolx: <https://w3id.org/treasuryoflives/ns/taxonomy/tol/>
PREFIX xml: <http://www.w3.org/XML/1998/namespace>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wiki: <https://www.wikidata.org/wiki/>

## Columns
# TOL ID
# TBRC RID
# Primary title
# Primary name
# Primary name encoding
# Wylie title
# Wylie name
# Tibetan
# Display name
# Birth year
# Birth year approximate
# Birth year alternate
# Birth century
# Death year
# Death year approximate
# Death year alternate
# Death century
# Gender
# Ordinal - not converted; do with incarnations
# Wikidata ID
# Lotsawa House URL
# HAR URL
# RMA URL
# 84000 URL

# Run: 
# tarql -e utf-8 --dedup 50000 persons.tq persons-5-30-24.csv > tolPersons.ttl

CONSTRUCT {
    ?person_iri 
        a tolo:Person ;
        owl:sameAs 
            ?bdrc_iri ,
            ?wikidata_iri ;

        skos:prefLabel 
            ?primary_name ,
            ?primary_name_wylie ,
            ?primary_name_tibetan ; 

        tolo:primaryName 
            ?primary_name ,
            ?primary_name_wylie ,   
            ?primary_name_tibetan ; 

        tolo:title 
            ?title_en ,
            ?title_wylie ;

        # These are mixed between English, Wylie, and others, so omit language tag.
        tolo:displayLabel ?Display_name_English ;

        bdo:personGender ?gender_iri ;

        tolo:hasEvent ?birth_iri ;
        tolo:hasEvent ?death_iri ;

        rdfs:seeAlso
            ?lotsawa_house_url ,
            ?har_url ,
            ?rma_url ,
            ?84000_url ;
        .

    ?birth_iri a tolo:Birth ;
        skos:prefLabel ?birth_label_en ;
        tolo:actualYear ?actual_birth_year_datetime ;
        tolo:approximateYear ?approximate_birth_year_datetime;
        tolo:alternateYear ?alternate_birth_year_datetime ;
        tolo:alternateYear ?actual_alternate_birth_year_datetime ;
        tolo:occursDuring ?birth_time_period_iri ;
        .

    ?death_iri a tolo:Death ;
        skos:prefLabel ?death_label_en ;
        tolo:actualYear ?actual_death_year_datetime ;
        tolo:approximateYear ?approximate_death_year_datetime ;
        tolo:alternateYear ?alternate_death_year_datetime ;
        tolo:alternateYear ?actual_alternate_death_year_datetime ;
        tolo:occursDuring ?death_time_period_iri ;
        .

}

WHERE {

    # Testing
    # FILTER(?ROWNUM = 406)

    # IRIs and URLs
    BIND(tarql:expandPrefixedName(CONCAT("told:_Person_", ?TOL_ID)) AS ?person_iri)

    # owl:sameAs
    BIND(tarql:expandPrefixedName(CONCAT("bdr:", ?TBRC_RID)) AS ?bdrc_iri)
    BIND(tarql:expandPrefixedName(CONCAT("wiki:", ?Wikidata_ID)) AS ?wikidata_iri) 

    # rdfs:seeAlso
    BIND(STRDT(?Lotsawa_House_URL, xsd:anyURI) AS ?lotsawa_house_url)
    # Some HAR URLs related directly to persons rather than images, so add here as well
    BIND(STRDT(?HAR_URL, xsd:anyURI) AS ?har_url)
    BIND(STRDT(?RMA_URL, xsd:anyURI) AS ?rma_url)
    BIND(STRDT(?84000_URL, xsd:anyURI) AS ?84000_url)


    # NAMES AND TITLES

    # Primary name and title
    # Note: TOL transcription is tagged as English
    BIND(STRLANG(?Primary_name, ?Primary_name_encoding) AS ?primary_name)
    BIND(STRLANG(?Title, "en") AS ?title_en)

    # Wylie name and title
    BIND(STRLANG(?Wylie_name, "bo-x-ewts") AS ?primary_name_wylie)
    BIND(STRLANG(?Wylie_title, "bo-x-ewts") AS ?title_wylie)

    # Tibetan name
    BIND(STRLANG(?Tibetan, "bo") AS ?primary_name_tibetan)


    # GENDER
    BIND(
        COALESCE(
            IF(?Gender = "M", "GenderMale", ?unbound),
            IF(?Gender = "F", "GenderFemale", ?unbound)
        ) AS ?gender_local_name
    )
    BIND(tarql:expandPrefixedName(CONCAT("bdr:", ?gender_local_name)) AS ?gender_iri)

    # DATES

    # To create an xsd:dateTime from a year string
    BIND("-01-01T00:00:00" AS ?date_time_completion)

    # Birth 
    
    # Birth event
    BIND(IF(BOUND(?Birth_year) || BOUND(?Birth_century), 
        tarql:expandPrefixedName(CONCAT("told:_Birth_", ?TOL_ID)), ?unbound) AS ?birth_iri)
    BIND(IF(BOUND(?birth_iri), STRLANG(CONCAT("Birth of ", ?Primary_name), "en"), ?unbound) as ?birth_label_en)

    # Birth year(s)
    BIND(
        COALESCE(
            IF(REGEX(?Birth_year, "^\\d{4}$"), ?Birth_year, ?unbound), 
            # Add initial 0 to 3-digit year to create a well-formed year
            IF(REGEX(?Birth_year, "^\\d{3}$"), CONCAT("0", ?Birth_year), ?unbound)
        )
        # Two-digit birth year (e.g., 11, 13) is always accompanied by a century, so don't generate a birth year. There is no data of this type for death years.
        # NULLs will be ignored.
        AS ?full_birth_year
    )

    BIND(STRDT(CONCAT(?full_birth_year, ?date_time_completion), xsd:dateTime) AS ?full_birth_year_datetime)

    # Split alternate year strings
    OPTIONAL {
        ?alternate_birth_year apf:strSplit(?Birth_year_alternate ", ")
    }

    BIND(
        COALESCE(
            IF(REGEX(?alternate_birth_year, "^\\d{4}$"), ?alternate_birth_year, ?unbound), 
            # Add initial 0 to 3-digit year to create a well-formed year
            IF(REGEX(?alternate_birth_year, "^\\d{3}$"), CONCAT("0", ?alternate_birth_year), ?unbound)
        )
        AS ?full_alternate_birth_year
    )
    BIND(STRDT(CONCAT(?full_alternate_birth_year, ?date_time_completion), xsd:dateTime) AS ?alternate_birth_year_datetime)

    # Actual vs approximate vs alternate birth year
    BIND(IF(?Birth_year_approximate = "1", ?full_birth_year_datetime, ?unbound) AS ?approximate_birth_year_datetime)
    BIND(IF(!BOUND(?alternate_birth_year) && !BOUND(?approximate_birth_year_datetime), ?full_birth_year_datetime, ?unbound) AS ?actual_birth_year_datetime)
    BIND(IF(BOUND(?alternate_birth_year), ?full_birth_year_datetime, ?unbound) AS ?actual_alternate_birth_year_datetime)

    # Birth century
    BIND(tarql:expandPrefixedName(CONCAT("told:_HistoricalPeriod_", ?Birth_century)) AS ?birth_time_period_iri) 


    # Death 

    # Death event
    BIND(IF(BOUND(?Death_year), 
        # ignore century for now - data seems bad || BOUND(?Death_century),  
        tarql:expandPrefixedName(CONCAT("told:_Death_", ?TOL_ID)), ?unbound) AS ?death_iri)
    BIND(IF(BOUND(?death_iri), STRLANG(CONCAT("Death of ", ?Primary_name), "en"), ?unbound) as ?death_label_en) 

    # Death years
    BIND(
        COALESCE(
            IF(REGEX(?Death_year, "^\\d{4}$"), ?Death_year, ?unbound), 
            # Add initial 0 to 3-digit year to create a well-formed year
            IF(REGEX(?Death_year, "^\\d{3}$"), CONCAT("0", ?Death_year), ?unbound)
        )
        AS ?full_death_year
    )

    BIND(STRDT(CONCAT(?full_death_year, ?date_time_completion), xsd:dateTime) AS ?full_death_year_datetime)

    # Split alternate year strings
    OPTIONAL {
        ?alternate_death_year apf:strSplit(?Death_year_alternate ", ")
    }

    BIND(
        COALESCE(
            IF(REGEX(?alternate_death_year, "^\\d{4}$"), ?alternate_death_year, ?unbound), 
            # Add initial 0 to 3-digit year to create a well-formed year
            IF(REGEX(?alternate_death_year, "^\\d{3}$"), CONCAT("0", ?alternate_death_year), ?unbound)
        )
        AS ?full_alternate_death_year
    )
    BIND(STRDT(CONCAT(?full_alternate_death_year, ?date_time_completion), xsd:dateTime) AS ?alternate_death_year_datetime)

    # Actual vs approximate vs alternate death year
    BIND(IF(?Death_year_approximate = "1", ?full_death_year_datetime, ?unbound) AS ?approximate_death_year_datetime)
    BIND(IF(!BOUND(?alternate_death_year) && !BOUND(?approximate_death_year_datetime), ?full_death_year_datetime, ?unbound) AS ?actual_death_year_datetime)
    BIND(IF(BOUND(?alternate_death_year), ?full_death_year_datetime, ?unbound) AS ?actual_alternate_death_year_datetime)

    # Death century
    BIND(tarql:expandPrefixedName(CONCAT("told:_HistoricalPeriod_", ?Death_century)) AS ?death_time_period_iri) 

}
